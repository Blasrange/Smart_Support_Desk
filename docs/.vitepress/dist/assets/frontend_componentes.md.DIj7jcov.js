import{_ as a,c as e,o as i,ae as n}from"./chunks/framework.DSdMES89.js";const c=JSON.parse('{"title":"🖥️ Frontend Vue 3 + Inertia.js","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/componentes.md","filePath":"frontend/componentes.md"}'),t={name:"frontend/componentes.md"};function o(l,s,p,r,d,h){return i(),e("div",null,s[0]||(s[0]=[n(`<h1 id="🖥️-frontend-vue-3-inertia-js" tabindex="-1">🖥️ Frontend Vue 3 + Inertia.js <a class="header-anchor" href="#🖥️-frontend-vue-3-inertia-js" aria-label="Permalink to &quot;🖥️ Frontend Vue 3 + Inertia.js&quot;">​</a></h1><p>La interfaz de usuario de <strong>Smart AI Support Desk</strong> está desarrollada con <strong>Vue 3</strong>, utilizando la <strong>Composition API</strong> y la arquitectura de aplicaciones de una sola página (SPA) a través de <strong>Inertia.js</strong>. Esto proporciona una experiencia moderna, fluida y altamente personalizable.</p><hr><h2 id="🧩-componentes-vue-3" tabindex="-1">🧩 Componentes Vue 3 <a class="header-anchor" href="#🧩-componentes-vue-3" aria-label="Permalink to &quot;🧩 Componentes Vue 3&quot;">​</a></h2><p>Los componentes son la base de la interfaz del sistema. Se han diseñado con enfoque modular y reutilizable, empleando buenas prácticas de Vue 3 como:</p><ul><li><code>props</code> para recibir datos desde el componente padre</li><li><code>emits</code> para emitir eventos personalizados hacia el componente padre</li><li><code>slots</code> para permitir personalización del contenido interno</li><li><code>ref</code> y <code>reactive</code> para estados locales</li><li><code>composables</code> (archivos <code>.ts</code> o <code>.js</code>) para lógica compartida</li></ul><hr><h2 id="🧱-estructura-de-componentes" tabindex="-1">🧱 Estructura de Componentes <a class="header-anchor" href="#🧱-estructura-de-componentes" aria-label="Permalink to &quot;🧱 Estructura de Componentes&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Components/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Form/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> InputText.vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UI/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Modal.vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Button.vue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Tickets/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TicketList.vue</span></span></code></pre></div>`,9)]))}const F=a(t,[["render",o]]);export{c as __pageData,F as default};
